The ``0-add_integer`` module
============================

Using ``add_integer``
----------------------

Importing the function from the module
    >>> add_integer = __import__('0-add_integer').add_integer

Checking for module docstring:
    >>> m = __import__("0-add_integer").__doc__
    >>> len(m) > 1
    True

Checking for function docstring:
    >>> f = __import__("0-add_integer").add_integer.__doc__
    >>> len(m) > 1
    True

Checking for addition with positive numbers:
    >>> add_integer(6, 8)
    14
 
Checking for addition with one positive and one negative numbers:
    >>> add_integer(4, -33)
    -29

Checking for addition with one negative and one positive numbers:
    >>> add_integer(-3, 7)
    4

checking float with integer:
    >>> add_integer(3.4, 5)
    8

checking float + integer:
    >>> add_integer(8, 1.8)
    9

checking float + float:
    >>> add_integer(6.4, 6.6)
    12

checking for NaN:
    >>> add_integer(float('nan'), 3)
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer

checking non-number with integer:
    >>> add_integer("8", 43)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

Checking integer with non-number:
    >>> add_integer(67, [6,8])
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

Checking no argument:
    >>> add_integer()
    Traceback (most recent call last):
    ...
    TypeError: add_integer() missing 1 required positional argument: 'a'

Cheching one argument:
    >>> add_integer(8)
    106

Checking for more than one 2 arguments:
    >>> add_integer(3, 6, 9)
    Traceback (most recent call last):
    ...
    TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

Checking for passed inf:
    >>> add_integer(2, float('inf'))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer
